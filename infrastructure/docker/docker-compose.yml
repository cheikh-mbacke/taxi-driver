services:
  # Base de données PostgreSQL
  postgres:
    image: postgres:15-alpine
    container_name: taxi-driver-postgres
    environment:
      POSTGRES_DB: taxi_driver
      POSTGRES_USER: taxi_user
      POSTGRES_PASSWORD: taxi_password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ../database/init-db.sql:/docker-entrypoint-initdb.d/init-db.sql
    restart: unless-stopped

  # API FastAPI
  taxi-driver-api:
    build:
      context: ../..
      dockerfile: infrastructure/docker/Dockerfile
    container_name: taxi-driver-api
    ports:
      - "8000:8000"
    volumes:
      # Volumes optimisés pour le développement
      - ../../app:/app/app:delegated
      - ../../scripts:/app/scripts:delegated
      - ../../config:/app/config:delegated
      # Volume pour les logs uniquement
      - ../../data/logs:/app/data/logs:delegated
      # Volume pour les résultats et images
      - ../../data/results:/app/data/results:delegated
    environment:
      - PYTHONUNBUFFERED=1
      - DATABASE_URL=postgresql://taxi_user:taxi_password@postgres:5432/taxi_driver
      - POSTGRES_HOST=postgres
      - POSTGRES_PORT=5432
      - POSTGRES_DB=taxi_driver
      - POSTGRES_USER=taxi_user
      - POSTGRES_PASSWORD=taxi_password
      # Variables pour le développement
      - DEBUG=true
      - RELOAD=true
    depends_on:
      - postgres
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 5s
      timeout: 3s
      retries: 3
      start_period: 10s

volumes:
  postgres_data:
