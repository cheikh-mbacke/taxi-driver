services:
  # Base de données PostgreSQL
  postgres:
    image: postgres:15-alpine
    container_name: taxi-driver-postgres
    environment:
      POSTGRES_DB: taxi_driver
      POSTGRES_USER: taxi_user
      POSTGRES_PASSWORD: taxi_password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ../database/init-db.sql:/docker-entrypoint-initdb.d/init-db.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U taxi_user -d taxi_driver"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped

  # API FastAPI
  taxi-driver-api:
    build:
      context: ../..
      dockerfile: infrastructure/docker/Dockerfile
    container_name: taxi-driver-api
    ports:
      - "8000:8000"
    volumes:
      # Volumes pour le développement (évite de reconstruire)
      - ../../app:/app/app
      - ../../scripts:/app/scripts
      - ../../requirements.txt:/app/requirements.txt
      - ../../requirements-dev.txt:/app/requirements-dev.txt
      # Volumes pour les données
      - ../../data/results:/app/data/results
      - ../../data/models:/app/data/models
      # Volume pour les logs
      - ../../data/logs:/app/data/logs
    environment:
      - PYTHONUNBUFFERED=1
      - DATABASE_URL=postgresql://taxi_user:taxi_password@postgres:5432/taxi_driver
      - POSTGRES_HOST=postgres
      - POSTGRES_PORT=5432
      - POSTGRES_DB=taxi_driver
      - POSTGRES_USER=taxi_user
      - POSTGRES_PASSWORD=taxi_password
      # Variables pour le développement
      - DEBUG=true
      - RELOAD=true
    depends_on:
      postgres:
        condition: service_healthy
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 30s

  taxi-driver-frontend:
    build:
      context: ../../frontend
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    environment:
      - VITE_API_URL=http://localhost:8000
    volumes:
      - ../../frontend:/app
      - /app/node_modules
    depends_on:
      - taxi-driver-api
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000"]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 60s
    # Commande de développement (serveur de développement)
    command: ["npm", "run", "dev", "--", "--host", "0.0.0.0"]

volumes:
  postgres_data:
